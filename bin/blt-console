#!/usr/bin/env php
<?php

use Acquia\Blt\Console\Command\ComposerMungeCommand;
use Acquia\Blt\Console\Command\YamlMungeCommand;
use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Debug\Debug;

// if you don't want to setup permissions the proper way, just uncomment the following PHP line
// read http://symfony.com/doc/current/book/installation.html#configuration-and-setup for more information
//umask(0000);

set_time_limit(0);
$consoleRoot = __DIR__ . '/../';
if (file_exists($consoleRoot . 'vendor/autoload.php')) {
  $autoload = include_once $consoleRoot . 'vendor/autoload.php';
}
elseif (file_exists($consoleRoot.'../../autoload.php')) {
  $autoload = include_once $consoleRoot . '../../autoload.php';
}
else {
  echo 'Something goes wrong with your archive' . PHP_EOL .
    'Try downloading again' . PHP_EOL;
  exit(1);
}

$input = new ArgvInput();
$env = $input->getParameterOption(array('--env', '-e'), getenv('SYMFONY_ENV') ?: 'dev');
$debug = getenv('SYMFONY_DEBUG') !== '0' && !$input->hasParameterOption(array('--no-debug', '')) && $env !== 'prod';

if ($debug) {
  Debug::enable();
}

$kernel = new AppKernel($env, $debug);
$application = new Application($kernel);
$application->add(new ComposerMungeCommand());
$application->add(new YamlMungeCommand());
$application->run($input);
